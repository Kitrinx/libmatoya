// Copyright (c) 2020 Christopher D. Dickson <cdd@matoya.group>
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

struct VS_OUTPUT {
	float4 position : SV_POSITION;
	float2 texcoord : TEXCOORD;
};

sampler tex0 : register(s0);
sampler tex1 : register(s1);
sampler tex2 : register(s2);

uniform float4 format : register(c0);

float4 yuv_to_rgba(float y, float u, float v)
{
	y = (y - 0.0625) * 1.164;
	u = u - 0.5;
	v = v - 0.5;

	float r = y + 1.793 * v;
	float g = y - 0.213 * u - 0.533 * v;
	float b = y + 2.112 * u;

	return float4(r, g, b, 1.0);
}

float4 main(VS_OUTPUT input) : SV_TARGET
{
	// NV12
	if (format[0] == 2.0) {
		float y = tex2D(tex0, input.texcoord).r;
		float u = tex2D(tex1, input.texcoord).r;
		float v = tex2D(tex1, input.texcoord).a;

		return yuv_to_rgba(y, u, v);

	// I420, I444
	} else if (format[0] == 3.0 || format[0] == 4.0) {
		float y = tex2D(tex0, input.texcoord).r;
		float u = tex2D(tex1, input.texcoord).r;
		float v = tex2D(tex2, input.texcoord).r;

		return yuv_to_rgba(y, u, v);
	}

	// RGBA
	return tex2D(tex0, input.texcoord);
}
